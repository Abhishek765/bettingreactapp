{"version":3,"sources":["components/controls/Button.jsx","components/controls/Controls.jsx","components/controls/Input.jsx","components/controls/RadioGroup.jsx","components/controls/Select.jsx","components/controls/Checkbox.jsx","components/TableComponent.jsx","components/ListPage.jsx","components/Sidebar.jsx","components/FirstPage.jsx","components/NoUsers.jsx","components/SecondPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","label","textTransform","Controls","Input","props","name","value","error","onChange","other","TextField","variant","helperText","RadioGroup","items","FormControl","FormLabel","row","map","item","FormControlLabel","id","control","Radio","title","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","color","checked","e","target","convertToDefEventPara","Button","text","size","onClick","classes","headCells","disableSorting","numeric","disablePadding","TableComponent","users","setUsers","useState","order","setOrder","orderBy","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","checkedCount","setCheckedCount","fn","filterFn","setFilterFn","it","loadUsers","a","axios","get","i","res","dataUser","data","c","undefined","length","select","useEffect","descendingComparator","b","Name","className","Toolbar","InputProps","startAdornment","InputAdornment","position","Search","filter","x","toLowerCase","includes","TableContainer","TableHead","TableRow","headCell","TableCell","align","sortDirection","TableSortLabel","active","direction","cellId","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","user","event","checkedCount1","alert","type","Avatar","alt","src","Bet","Price","TablePagination","rowsPerPageOptions","count","onChangePage","nextPage","onChangeRowsPerPage","parseInt","ListPage","class","Sidebar","setVisiblePage","visiblePage","arr","width","height","push","addUser","aria-hidden","FirstPage","NoUsers","SecondPage","Card","CardActionArea","CardContent","Typography","gutterBottom","component","App","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93ab34a7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function Button(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{ root: classes.root, label: classes.label }}>\r\n            {text}\r\n        </MuiButton>\r\n    )\r\n}","import Input from \"./Input\";\r\nimport RadioGroup from \"./RadioGroup\";\r\nimport Select from \"./Select\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport Button from \"./Button\";\r\n\r\nconst Controls = {\r\n    Input,\r\n    RadioGroup,\r\n    Select,\r\n    Checkbox,\r\n    Button\r\n\r\n}\r\n\r\nexport default Controls;","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n\r\n    const { name, label, value, error = null, onChange, ...other } = props;\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && { error: true, helperText: error })}\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\n\r\nexport default function RadioGroup(props) {\r\n\r\n    const { name, label, value, onChange, items } = props;\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup row\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {\r\n                    items.map(\r\n                        item => (\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    )\r\n}","import React from 'react'\r\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\r\n\r\nexport default function Select(props) {\r\n\r\n    const { name, label, value,error=null, onChange, options } = props;\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\"\r\n        {...(error && {error:true})}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n                label={label}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {\r\n                    options.map(\r\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                    )\r\n                }\r\n            </MuiSelect>\r\n            {error && <FormHelperText>{error}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}","import React from 'react'\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\r\n\r\nexport default function Checkbox(props) {\r\n\r\n    const { name, label, value, onChange } = props;\r\n\r\n\r\n    const convertToDefEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormControlLabel\r\n                control={<MuiCheckbox\r\n                    name={name}\r\n                    color=\"primary\"\r\n                    checked={value}\r\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\r\n                />}\r\n                label={label}\r\n            />\r\n        </FormControl>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport './Table.css'\r\nimport {\r\n    TableContainer, Table, TableBody, TableHead, TableRow, TableCell, TextField, Avatar\r\n    , TablePagination,\r\n    TableSortLabel,\r\n    Toolbar,\r\n    InputAdornment,\r\n    makeStyles\r\n} from \"@material-ui/core\";\r\n\r\nimport axios from 'axios';\r\nimport Controls from './controls/Controls'\r\nimport { Search } from '@material-ui/icons';\r\n\r\n\r\n\r\n\r\nconst headCells = [\r\n    { id: \"Select\", label: \"SELECT\", disableSorting: true },\r\n    { id: \"PlayerName\", numeric: false, disablePadding: true, label: \"PLAYER NAME\" },\r\n    { id: \"Level\", numeric: true, disablePadding: false, label: \"LEVEL\", disableSorting: true },\r\n    { id: \"Avator\", numeric: false, disablePadding: true, label: \"AVATOR\", disableSorting: true },\r\n    { id: \"Bet\", numeric: true, disablePadding: false, label: \"BET\" },\r\n    { id: \"Wins\", numeric: true, disablePadding: false, label: \"WINS\", disableSorting: true },\r\n    { id: \"Lost\", numeric: true, disablePadding: false, label: \"LOST\", disableSorting: true },\r\n    { id: \"Price\", numeric: true, disablePadding: false, label: \"PRICE\" }\r\n]\r\n\r\n\r\n\r\nconst TableComponent = ({ users, setUsers }) => {\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [order, setOrder] = useState();\r\n    const [orderBy, setOrderBy] = useState();\r\n\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(9);\r\n    const [checkedCount, setCheckedCount] = useState(0);\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } });\r\n    let it = 0;\r\n    const addIdentifiers = (target) => {\r\n        target.id = it;\r\n        target.select = false;\r\n        it++;\r\n    }\r\n\r\n    const loadUsers = async () => {\r\n        const res = await axios.get(\"https://s3-ap-southeast-1.amazonaws.com/he-public-data/bets7747a43.json\");\r\n\r\n\r\n        let dataUser = res.data;\r\n        for (var i in dataUser) {\r\n\r\n            var c = dataUser[i];\r\n\r\n            if (typeof c === 'object') {\r\n\r\n                if (c.length === undefined) {\r\n\r\n                    //c is not an array\r\n                    addIdentifiers(c);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        setUsers(dataUser);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, [])\r\n\r\n    const onChangePage = (event, nextPage) => {\r\n        setPage(nextPage);\r\n    }\r\n\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (orderBy === \"PlayerName\") {\r\n            return (b.Name < a.Name ? -1 : 1);\r\n        }\r\n        else {\r\n            if (b[orderBy] < a[orderBy]) {\r\n                return -1;\r\n            }\r\n            if (b[orderBy] > a[orderBy]) {\r\n                return 1;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(users), getComparator(order, orderBy)).slice(page * rowsPerPage, (page + 1) * rowsPerPage)\r\n    }\r\n\r\n\r\n    const handleSortRequest = cellId => {\r\n        const isAsc = orderBy === cellId && order === \"asc\";\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(cellId)\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10))\r\n        setPage(0);\r\n    }\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.Name.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"main_menu\">\r\n            {/* Search field */}\r\n            <div className=\"search\">\r\n\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Players\"\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n\r\n                        onChange={\r\n                            handleSearch\r\n                        }\r\n                    />\r\n                </Toolbar>\r\n            </div>\r\n            <TableContainer>\r\n                <Table>\r\n                    {/* Heading */}\r\n                    <TableHead >\r\n                        <TableRow className=\"head_row\">\r\n                            {\r\n                                headCells.map(headCell => (\r\n\r\n                                    <TableCell key={headCell.id}\r\n                                        align={headCell.numeric ? 'right' : 'left'}\r\n                                        sortDirection={orderBy === headCell.id ? order : false}\r\n                                    >\r\n                                        {headCell.disableSorting ? headCell.label :\r\n                                            <TableSortLabel\r\n                                                active={orderBy === headCell.id}\r\n                                                direction={orderBy === headCell.id ? order : 'asc'}\r\n                                                onClick={() => { handleSortRequest(headCell.id) }}>\r\n                                                {headCell.label}\r\n                                            </TableSortLabel>\r\n                                        }\r\n                                    </TableCell>\r\n\r\n                                ))\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    {/*   Body   */}\r\n                    <TableBody>\r\n\r\n                        {\r\n                            recordsAfterPagingAndSorting().map((user) => {\r\n                                return (<TableRow key={user.id} className=\"user_table\">\r\n                                    <TableCell>\r\n\r\n                                        <input onChange={event => {\r\n                                            let checkedCount1;\r\n                                            let checked = event.target.checked;\r\n                                            if (checked) {\r\n                                                checkedCount1 = checkedCount + 1;\r\n                                                setCheckedCount(checkedCount1);\r\n                                            }\r\n                                            if (checked === false) {\r\n                                                checkedCount1 = checkedCount - 1;\r\n                                                setCheckedCount(checkedCount1);\r\n                                            }\r\n\r\n                                            setUsers(users.map(data => {\r\n\r\n\r\n                                                if (user.id === data.id) {\r\n                                                    if (checked && checkedCount1 > 9) {\r\n                                                        setCheckedCount(checkedCount)\r\n                                                        alert(\"You've reached the limit\");\r\n                                                        checked = false;\r\n                                                    }\r\n                                                    data.select = checked;\r\n                                                    // console.log(data);\r\n                                                }\r\n\r\n                                                return data;\r\n                                            }))\r\n\r\n\r\n                                        }} type=\"checkbox\" checked={user.select} />\r\n                                    </TableCell>\r\n                                    <TableCell className=\"user_name\">{user.Name}</TableCell>\r\n                                    <TableCell>2</TableCell>\r\n                                    <TableCell>\r\n                                        <Avatar className=\"avator_profile\" variant=\"square\" alt={`Image of ${user.Name}`} src={user[\"Profile Image\"]} />\r\n                                    </TableCell>\r\n                                    <TableCell>{user.Bet}</TableCell>\r\n                                    <TableCell>Wins</TableCell>\r\n                                    <TableCell>Lost</TableCell>\r\n                                    <TableCell>{user.Price}</TableCell>\r\n\r\n                                </TableRow>\r\n                                )\r\n\r\n                            })\r\n                        }\r\n\r\n                    </TableBody>\r\n\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[]}\r\n                    count={users.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={onChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableComponent;\r\n","import React,{useContext} from 'react'\r\nimport './List.css'\r\nimport TableComponent from './TableComponent';\r\n\r\nconst ListPage = ({users,setUsers}) => {\r\n    \r\n    return (\r\n        <div className=\"list_page\">\r\n             <div class=\"heading\">Select Playing 9</div>\r\n            \r\n\r\n            {/* Table and Search */}\r\n            <TableComponent users = {users} setUsers = {setUsers}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPage;\r\n","import React, { useState } from 'react'\r\nimport { Container, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, TextField, Avatar } from \"@material-ui/core\";\r\nimport \"./Sidebar.css\";\r\nimport App from '../App';\r\n\r\n\r\n\r\nconst Sidebar = ({ users, setUsers, visiblePage, setVisiblePage }) => {\r\n\r\n    let arr = [];\r\n    const addUser = (user) => {\r\n        arr.push(user);\r\n    }\r\n     const [checkedUser, setCheckedUser] = useState([]);\r\n    const showSecond = () => {\r\n        setVisiblePage(false);\r\n        setUsers(arr);\r\n    }\r\n    return (\r\n        <div className=\"sidebar_page\">\r\n            {/* Logo */}\r\n            <div className=\"dice_img\">\r\n                <img src=\"https://cdn.iconscout.com/icon/premium/png-256-thumb/ludo-dices-1994621-1682271.png\" alt=\"dice Image\" width=\"90\" height=\"90\" />\r\n            </div>\r\n            <div className=\"player_9_div\">\r\n                <p className=\"player_9\">Playing 9</p>\r\n            </div>\r\n            {/* User */}\r\n            <div className=\"userContainer\">\r\n                {\r\n                    users.map((user) => {\r\n\r\n\r\n                        if (user.select === true) {\r\n                            \r\n                            addUser(user);\r\n                            return (\r\n\r\n                                <div className=\"player_select\">\r\n\r\n                                    <img className=\"player_img\" src={user[\"Profile Image\"]} alt={`Image of ${user.Name}`} />\r\n\r\n                                    <div className=\"name_mid\">\r\n                                        <p className=\"name_mid_player\">{user.Name}</p>\r\n                                        <div className=\"bet_wins\">\r\n                                            <p className=\"player_wins\"><i class=\"fa fa-trophy\" aria-hidden=\"true\"></i> 20</p>\r\n                                            <p className=\"player_bet\"><i class=\"fa fa-certificate\" aria-hidden=\"true\"></i> 5</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <p className=\"player_price\"><i class=\"fa fa-money\" aria-hidden=\"true\"></i> {user.Price}</p>\r\n                                </div>\r\n\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <button className=\"start_btn\" onClick={showSecond}>START</button>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, {useState} from \"react\";\r\nimport ListPage from './ListPage'\r\nimport SideBar from './Sidebar'\r\nimport \"./First.css\";\r\n\r\n\r\n\r\nconst FirstPage = ({users, setUsers, visiblePage, setVisiblePage}) => {\r\n\r\n  // const [users,setUsers] = useState([]);\r\n\r\n\r\n  return (\r\n    <div className=\"pages\">\r\n\r\n      \r\n    \r\n      <SideBar users={users} setUsers = {setUsers} visiblePage={visiblePage} setVisiblePage={setVisiblePage}/>\r\n\r\n      {/* Listpage */}\r\n      <ListPage users = {users} setUsers = {setUsers}/>\r\n      \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstPage;\r\n","import React from 'react'\r\nimport './NoUsers.css';\r\nconst NoUsers = ({ setVisiblePage }) => {\r\n    return (\r\n        <div className=\"no_users\">\r\n\r\n            <h1 className=\"no_heading\">No users Checked Try Again !!!</h1>\r\n            <button className=\"btn_no\" onClick={() => {\r\n\r\n                setVisiblePage(true);\r\n\r\n            }}>BACK</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoUsers;\r\n","import { Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Second.css';\r\nconst SecondPage = ({ users, visiblePage, setVisiblePage }) => {\r\n\r\n    const renUser = users.map((user) => {\r\n\r\n        return user.select && <h1>{user.name}</h1>\r\n    })\r\n\r\n    return (\r\n        <div className=\"second_users\">\r\n            <h1 className=\"second_heading\">This is Round page</h1>\r\n\r\n            <button className=\"btn_second\" onClick={() => {\r\n\r\n                setVisiblePage(true);\r\n\r\n            }}>BACK</button>\r\n\r\n            <div className=\"users_list\">\r\n                {\r\n                    users.map(user => (\r\n\r\n                        <Card className=\"user_card\">\r\n                            <CardActionArea>\r\n                                <img\r\n                                    className=\"user_img\"\r\n                                    src={user[\"Profile Image\"]}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {user.Name}\r\n                                    </Typography>\r\n\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n\r\n                        </Card>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondPage;\r\n","import React, { useState } from 'react'\nimport './App.css'\nimport FirstPage from './components/FirstPage';\nimport NoUsers from './components/NoUsers';\nimport SecondPage from './components/SecondPage';\nconst App = () => {\n\n  const [visiblePage, setVisiblePage] = useState(true);\n\n  const [users, setUsers] = useState([]);\n  // const [textButton,setTextButton] = useState(\"Start\");\n\n  // const showSecond = () => {\n  //   setVisiblePage(!visiblePage);\n  //   {visiblePage ? setTextButton(\"Back\"): setTextButton(\"Start\")}\n  // }\n  return (\n    <div className=\"app\">\n      {/* First Page */}\n\n      {console.log(\"APP USER: \", users)\n\n      } {/* Second Page */}\n      {visiblePage ? <FirstPage users={users} setUsers={setUsers} visiblePage={visiblePage} setVisiblePage={setVisiblePage} /> :\n\n        (users.length > 0 ?\n\n          <SecondPage users={users} visiblePage={visiblePage} setVisiblePage={setVisiblePage} /> : <NoUsers setVisiblePage={setVisiblePage} />)\n\n      }\n\n      {/* <button onClick={showSecond}>{textButton}</button> */}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}